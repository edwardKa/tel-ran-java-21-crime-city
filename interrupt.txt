Thread interruption
1. Создать static классы Slayer и Robber.
1а. Slayer должен наследовать от Thread, а Robber - имплементировать от Runnable

2. Создать static List<Thread> band, где будут храниться все запущенные объеты нитей

3. В нити main - создать метод, создающий 3 объекта Slayer и 4 объекта Robber и запускающий их.
3а. При создании, объекты должны быть добавлены в список band.
3б. Метод должен называться startCrime()
3г. Вызвать метод startCrime из метода main и после вызова - заснуть на 20 секунд.

4. В нити main создать метод nonViolentStopCrime()
4a. Метод вызывает у всех тредов из списка band метод interrupt

5. В нити main создать метод violentStopCrime()
5а. Метод должен вызывать у всех запущенных тредов метод stop()

-------------------------

6. В классе Slayer реализовать метод run() (run crime - начать преступление)
6.1. Метод должен печатать имя, переданное при создании трэда

7.1. Создать класс Agent наследующий Thread или имплементирующий Runnable
7.2. В класс передавать имя типа String
7.3. Метод run будет засыпать на 5 секунд и печатать свое имя

8.1. В классе Robber реализовать метод run()
8.2. Метод будет создавать по одному новому трэду Agent и "засыпать" на 5 секунд
8.3. Все дочерние потоки должны быть запущены как daemon


---------------------------
P.S. 1. Когда вызывается метод stopCrime() все трэды и трэды трэдов должны остановиться и
приложение должно завершиться
P.S. 2. Все трэды бегут в бесконечному цикле
P.S. 3. Классы Slayer и Robber должны реализовавыть функциональность для Thread interruption


Задание:
1. Доделать lifecycle агентов - создать daemon трэды для каждого грабителя
2. Время сна для грабителя и для убийцы должно высчитываться произвольно
(погуглить: как сделать random из числа)
3. Вреня сна должно колебаться между 1 и 6 секундами


